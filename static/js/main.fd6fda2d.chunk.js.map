{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","console","log","toLocaleTimeString","React","Component","App","isClockVisible","clockName","Math","ceil","random","hideClock","showClock","setRandomName","_","prev","name","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,OARN,kCAYE,WACEC,cAAcJ,KAAKC,WAbvB,kBAgBE,WACED,KAAKK,SAAS,CACZP,KAAM,IAAIC,OAGZO,QAAQC,IAAIP,KAAKH,MAAMC,KAAKU,wBArBhC,oBAwBE,WACE,OACE,oCACE,4CAEGR,KAAKH,MAAMC,KAAKU,2BA7B3B,GAA2BC,IAAMC,YCEpBC,EAAb,4MACEd,MAAQ,CACNe,gBAAgB,EAChBC,UAAWC,KAAKC,KAAqB,GAAhBD,KAAKE,WAH9B,EAeEC,UAAY,WACV,EAAKZ,SAAS,CACZO,gBAAgB,KAjBtB,EAqBEM,UAAY,WACV,EAAKb,SAAS,CACZO,gBAAgB,KAvBtB,EA2BEO,cAAgB,WACd,EAAKd,SAAS,CACZQ,UAAWC,KAAKC,KAAqB,GAAhBD,KAAKE,aA7BhC,wDAME,SAAmBI,EAAGC,GAChBA,EAAKR,YAAcb,KAAKH,MAAMgB,WAEhCP,QAAQC,IAAR,+CAC+Bc,EAAKR,UADpC,eACoDb,KAAKH,MAAMgB,UAD/D,eATN,oBAiCE,WAAU,IAAD,EAC+Bb,KAAKH,MAAnCgB,EADD,EACCA,UAAWD,EADZ,EACYA,eAEnB,OACE,oCACE,2CACCA,GAAkB,kBAAC,EAAD,CAAOU,KAAMT,IAChC,4BACEU,KAAK,SACLC,QAASxB,KAAKiB,WAFhB,cAMC,IACD,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,WAFhB,cAMC,IACD,4BACEK,KAAK,SACLC,QAASxB,KAAKmB,eAFhB,mBAMA,2BAAG,sDAAwBN,UA5DnC,GAAyBJ,IAAMC,WCA/Be,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fd6fda2d.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  }\n\n  render() {\n    return (\n      <>\n        <h1>\n          Current time:\n          {this.state.date.toLocaleTimeString()}\n        </h1>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.ceil(Math.random() * 21),\n  }\n\n  componentDidUpdate(_, prev) {\n    if (prev.clockName !== this.state.clockName) {\n      // eslint-disable-next-line\n      console.log(`\n        The Clock was renamed from ${prev.clockName} to ${this.state.clockName}\n      `);\n    }\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.ceil(Math.random() * 21),\n    });\n  }\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <>\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        {' '}\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        {' '}\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n        <p><strong>{`Clock name: ${clockName}`}</strong></p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}